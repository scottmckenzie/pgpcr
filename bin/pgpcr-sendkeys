#!/usr/bin/python3

from email.message import EmailMessage
import smtplib
import sys
import os
import tempfile
from pgpcr import tran, log, newt
from pgpcr import fmt
from pgpcr import gpg_ops
from pgpcr import disks_newt

tran.init()
log.init()

def mail(smtp, address, fpr, keyfile):
    msg = EmailMessage()
    msg["From"] = "test@example.com"
    msg["To"] = address
    msg["Subject"] = "Your signed PGP key %s" % fpr
    msg.preamble = "Attached is your signed PGP Key %s. It has been sent to"
    " each of your UIDs to ensure you recieve it." % fpr
    with open(keyfile) as f:
        data = f.read()
    msg.add_attachment(data)
    smtp.send_message(msg)

smtp = smtplib.SMTP("localhost")
screen = newt.Screen()
d = disks_newt.setup(screen, _("signed keys"), "PGPCR Signing")

def finish():
    if screen is not None:
        screen.finish()
    if d is not None:
        d.eject()
    if smtp is not None:
        smtp.quit()
    sys.exit(0)

if d is None:
    finish()

keys = fmt.signdone(d.mountpoint)
if keys is None or keys == []:
    newt.error(screen, _("There are no signed keys on this disk. Please be"
        " sure they are in the signing/done folder."))
    finish()
tmp = tempfile.TemporaryDirectory()
gk = gpg_ops.GPGKey(tmp.name)
for k in keys:
    kl = gk.importbackup(k)
    if kl is not None:
        newt.error(screen, _("Multiple keys found in '%s': %s") % (k,
            " ".join(kl)))
        finish()
    fpr = k.strip(".pub")
    for u in gk.uids:
        mail(smtp, u.address, fpr, k)

finish()
