#!/usr/bin/python3
import sys
import tempfile
from pgpcr import tran, log, newt
from pgpcr import gpg_ops
from pgpcr import disks_newt
from pgpcr import external

tran.init()
log.init()

def parseinput():
    try:
        p = external.process(["gpgpartparse"])
    except external.CalledProcessError as e:
        sys.stderr.write(e.stderr)
        sys.exit(1)
    fprs = p.stdout.split()

    return fprs

if len(sys.argv) > 1:
    fprs = sys.argv[1:]
else:
    fprs = parseinput()

screen = newt.Screen()
gk = gpg_ops.GPGKey()
prog = newt.Progress(screen, _("Key Signing"), _("Finding Keys..."), 40)

def _progress(what, type, current, total, prog):
    prog.inc()
gk.setprogress(_progress, prog)

def _status(keyword, args, hook=None):
    if hook is not None:
        hook.inc()

gk.setstatus(_status, prog)

keys = []
for f in fprs:
    prog.setText(f)
    prog.set(0)
    kl = []
    tries = 3
    while tries:
        kl = gk.findkey(f)
        if len(kl) == 0:
            prog.inc(5)
            tries -= 1
        else:
            break
    if len(kl) == 0:
        newt.error(screen, _("No keys found for fingerprint:\n'%s'") % f)
    for k in kl:
        sign = newt.confirm(screen, _("Found Key"),
                _("Found:\n%s\n%s\nSign it?") % (k.fpr,
                    "\n".join([u.uid for u in k.uids])))
        if sign:
            keys.append(k.fpr)
            gk.importkey(k)

d = disks_newt.setup(screen, _("keys to sign"), "PGPCR Signing")
if d is None:
    screen.finish()
    sys.exit(0)
gk.exporttosign(d.mountpoint, keys)
d.eject()
newt.alert(screen, _("Key Signing"),_("These keys have been exported to"
    " %s") % str(d))
screen.finish()
